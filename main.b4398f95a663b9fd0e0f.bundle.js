(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1255:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(452);module._StorybookPreserveDecorators=!0,Object(_storybook_react__WEBPACK_IMPORTED_MODULE_0__.configure)([__webpack_require__(1279),__webpack_require__(1280)],module)}.call(this,__webpack_require__(1256)(module))},1279:function(module,exports){function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=function(){return[]},webpackEmptyContext.resolve=webpackEmptyContext,module.exports=webpackEmptyContext,webpackEmptyContext.id=1279},1280:function(module,exports,__webpack_require__){var map={"./plots/Histogram.stories.tsx":1300,"./plots/LinePlot.stories.tsx":1301,"./plots/Pie.stories.tsx":1302,"./plots/ScatterAndLinePlot.stories.tsx":1303,"./plots/ScatterPlot.stories.tsx":1304};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1280},1300:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Basic",(function(){return Basic})),__webpack_require__.d(__webpack_exports__,"MultiVariate",(function(){return MultiVariate}));__webpack_require__(10);var react=__webpack_require__(0),react_default=__webpack_require__.n(react),dist=__webpack_require__(40),PlotlyPlot=(__webpack_require__(1),__webpack_require__(9),__webpack_require__(3),__webpack_require__(4),__webpack_require__(66));function _extends(){return(_extends=Object.assign||function(target){for(var source,i=1;i<arguments.length;i++)for(var key in source=arguments[i])Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key]);return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],0<=excluded.indexOf(key)||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],0<=excluded.indexOf(key)||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function Histogram(props){var xLabel=props.xLabel,yLabel=props.yLabel,plotlyProps=_objectWithoutProperties(props,["xLabel","yLabel"]);return react_default.a.createElement(PlotlyPlot.a,_extends({},plotlyProps,{layout:{xaxis:{title:xLabel},yaxis:{title:yLabel}},type:"bar"}))}Histogram.displayName="Histogram",Histogram.__docgenInfo={description:"",methods:[],displayName:"Histogram",props:{xLabel:{required:!0,tsType:{name:"string"},description:""},yLabel:{required:!0,tsType:{name:"string"},description:""}},composes:["PlotComponentProps"]},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/plots/Histogram.tsx"]={name:"Histogram",docgenInfo:Histogram.__docgenInfo,path:"src/plots/Histogram.tsx"});__webpack_require__(65).withSource;var addSourceDecorator=__webpack_require__(65).addSource,__SOURCE_PREFIX__="/home/runner/work/plot-components/plot-components/src/plots",__STORY__="import React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport Histogram from './Histogram';\n\nexport default {\n  title: 'Histogram',\n  component: Histogram,\n};\n\nexport const Basic = () => <Histogram\n  onPlotUpdate={action('state updated')}\n  data={[{\n    x: [0,1,2,3,4,5,6,7,8,9,10],\n    y: randomData(11).map((x) => Math.floor(x*100)),\n    name: 'Variable A'\n  }]}\n  xLabel=\"exam score\"\n  yLabel=\"count\"\n/>\n\nconst x = [ 'eggs', 'milk', 'cheese' ];\nexport const MultiVariate = () => <Histogram\n  onPlotUpdate={action('state updated')}\n  data={[{\n    x,\n    y: randomData(3).map((x) => 100*x),\n    name: 'carbohydrate'\n  }, {\n    x,\n    y: randomData(3).map((x) => 100*x),\n    name: 'fat'\n  }]}\n  xLabel=\"ingredient\"\n  yLabel=\"percent content\"\n/>\n\nfunction randomData(size: number) {\n  const data: number[] = [];\n  for (let i = 0; i < size; i++) {\n    data.push(Math.random());\n  }\n  return data;\n}\n",__ADDS_MAP__={"histogram--basic":{startLoc:{col:21,line:10},endLoc:{col:2,line:19},startBody:{col:21,line:10},endBody:{col:2,line:19}},"histogram--multi-variate":{startLoc:{col:28,line:22},endLoc:{col:2,line:35},startBody:{col:28,line:22},endBody:{col:2,line:35}}},__MODULE_DEPENDENCIES__=[],__LOCAL_DEPENDENCIES__={},__IDS_TO_FRAMEWORKS__={},Basic=(__webpack_exports__.default={parameters:{storySource:{source:"import React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport Histogram from './Histogram';\n\nexport default {\n  title: 'Histogram',\n  component: Histogram,\n};\n\nexport const Basic = () => <Histogram\n  onPlotUpdate={action('state updated')}\n  data={[{\n    x: [0,1,2,3,4,5,6,7,8,9,10],\n    y: randomData(11).map((x) => Math.floor(x*100)),\n    name: 'Variable A'\n  }]}\n  xLabel=\"exam score\"\n  yLabel=\"count\"\n/>\n\nconst x = [ 'eggs', 'milk', 'cheese' ];\nexport const MultiVariate = () => <Histogram\n  onPlotUpdate={action('state updated')}\n  data={[{\n    x,\n    y: randomData(3).map((x) => 100*x),\n    name: 'carbohydrate'\n  }, {\n    x,\n    y: randomData(3).map((x) => 100*x),\n    name: 'fat'\n  }]}\n  xLabel=\"ingredient\"\n  yLabel=\"percent content\"\n/>\n\nfunction randomData(size: number) {\n  const data: number[] = [];\n  for (let i = 0; i < size; i++) {\n    data.push(Math.random());\n  }\n  return data;\n}\n",locationsMap:{"histogram--basic":{startLoc:{col:21,line:10},endLoc:{col:2,line:19},startBody:{col:21,line:10},endBody:{col:2,line:19}},"histogram--multi-variate":{startLoc:{col:28,line:22},endLoc:{col:2,line:35},startBody:{col:28,line:22},endBody:{col:2,line:35}}}}},title:"Histogram",component:Histogram},addSourceDecorator((function(){return react_default.a.createElement(Histogram,{onPlotUpdate:Object(dist.action)("state updated"),data:[{x:[0,1,2,3,4,5,6,7,8,9,10],y:randomData(11).map((function(x){return Math.floor(100*x)})),name:"Variable A"}],xLabel:"exam score",yLabel:"count"})}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/Histogram.stories.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__})),x=["eggs","milk","cheese"],MultiVariate=addSourceDecorator((function(){return react_default.a.createElement(Histogram,{onPlotUpdate:Object(dist.action)("state updated"),data:[{x:x,y:randomData(3).map((function(x){return 100*x})),name:"carbohydrate"},{x:x,y:randomData(3).map((function(x){return 100*x})),name:"fat"}],xLabel:"ingredient",yLabel:"percent content"})}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/Histogram.stories.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__});function randomData(size){for(var data=[],i=0;i<size;i++)data.push(Math.random());return data}},1301:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Basic",(function(){return Basic})),__webpack_require__.d(__webpack_exports__,"BasicFilled",(function(){return BasicFilled})),__webpack_require__.d(__webpack_exports__,"MultiVariate",(function(){return MultiVariate})),__webpack_require__.d(__webpack_exports__,"MultiVariateFilled",(function(){return MultiVariateFilled}));var react=__webpack_require__(0),react_default=__webpack_require__.n(react),dist=__webpack_require__(40),PlotlyPlot=(__webpack_require__(1),__webpack_require__(9),__webpack_require__(3),__webpack_require__(4),__webpack_require__(66));function _extends(){return(_extends=Object.assign||function(target){for(var source,i=1;i<arguments.length;i++)for(var key in source=arguments[i])Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key]);return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],0<=excluded.indexOf(key)||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],0<=excluded.indexOf(key)||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function LinePlot(props){var xLabel=props.xLabel,yLabel=props.yLabel,plotlyProps=_objectWithoutProperties(props,["xLabel","yLabel"]);return react_default.a.createElement(PlotlyPlot.a,_extends({},plotlyProps,{layout:{xaxis:{title:xLabel},yaxis:{title:yLabel}},type:"scatter",mode:"lines"}))}LinePlot.displayName="LinePlot",LinePlot.__docgenInfo={description:"",methods:[],displayName:"LinePlot",props:{xLabel:{required:!0,tsType:{name:"string"},description:""},yLabel:{required:!0,tsType:{name:"string"},description:""}},composes:["PlotComponentProps"]},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/plots/LinePlot.tsx"]={name:"LinePlot",docgenInfo:LinePlot.__docgenInfo,path:"src/plots/LinePlot.tsx"});__webpack_require__(65).withSource;var addSourceDecorator=__webpack_require__(65).addSource,__SOURCE_PREFIX__="/home/runner/work/plot-components/plot-components/src/plots",__STORY__="import React from 'react';\r\nimport { action } from '@storybook/addon-actions';\r\nimport LinePlot from './LinePlot';\r\n\r\nexport default {\r\n  title: 'LinePlot',\r\n  component: LinePlot,\r\n};\r\n\r\nexport const Basic = () => <LinePlot\r\n  onPlotUpdate={action('state updated')}\r\n  data={[{\r\n    x: ['A','B','C','D','E'],\r\n    y: [2,4,3,5,8],\r\n    fill: 'none',\r\n    name: 'Variable A',\r\n    line: {\r\n      dash: 'solid',\r\n      width: 3\r\n      }\r\n  }]}\r\n  xLabel=\"foo\"\r\n  yLabel=\"bar\"\r\n/>\r\n\r\n\r\nexport const BasicFilled = () => <LinePlot\r\n  onPlotUpdate={action('state updated')}\r\n  data={[{\r\n    x: [1,2,4,8,16,32,64,128],\r\n    y: [22,54,90,12,94,38,25,82],\r\n    name: 'Variable A',\r\n    fill: 'tozeroy',\r\n    line: {\r\n      dash: 'solid',\r\n      width: 3\r\n      }\r\n  }]}\r\n  xLabel=\"foo\"\r\n  yLabel=\"bar\"\r\n/>\r\n\r\n\r\n\r\nconst x = ['A','B','C','D','E'];\r\nexport const MultiVariate = () => <LinePlot\r\n  onPlotUpdate={action('state updated')}\r\n  data={[{\r\n    x,\r\n    y: [1,2,3,4,5],\r\n    name: 'Variable A',\r\n    fill: 'none',\r\n      line: {\r\n      dash: 'dashdot',\r\n      width: 4\r\n    }\r\n  }, \r\n  {\r\n    x,\r\n    y: [1,4,9,16,25],\r\n    fill: 'none',\r\n    name: 'Variable B',\r\n    line: {\r\n      dash: 'dot',\r\n      width: 4\r\n    }\r\n  }, \r\n  {\r\n    x,\r\n    y: [3,9,4,16,10],\r\n    fill: 'none',\r\n    name: 'Variable C',\r\n    line: {\r\n      dash: 'solid',\r\n      width: 4\r\n    }\r\n  }\r\n\r\n\r\n]}\r\n  xLabel=\"foo\"\r\n  yLabel=\"bar\"\r\n/>\r\n\r\n\r\nexport const MultiVariateFilled = () => <LinePlot\r\n  onPlotUpdate={action('state updated')}\r\n  data={[{\r\n    x:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],\r\n    y: [90,92,95,95,96,97,97,98,98,97,94,94,92,90,84,78,52,29,17,10,5,3,2,2,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,8,16,22,28,38,50,66,70,67],\r\n    name: 'E',\r\n    fill: 'tozeroy',\r\n    line: {\r\n      dash: 'dashdot',\r\n      width: 4\r\n    }\r\n  }, \r\n  {\r\n    x:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],\r\n    y: [10,8,5,5,4,4,3,3,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,16,19,46,63,71,88,97,100,100,100,95,95,95,92,84,78,72,62,50,44,30,33],\r\n    name: 'S',\r\n    fill: 'tozeroy',\r\n    line: {\r\n      dash: 'solid',\r\n      width: 4\r\n    }\r\n  },\r\n  {\r\n    x:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],\r\n    y: [0,0,0,0,0,0,0,0,0,2,5,6,8,10,16,22,48,71,83,90,95,97,98,98,100,93,84,81,54,37,29,12,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    name: 'T',\r\n    fill: 'tozeroy',\r\n    line: {\r\n      dash: 'solid',\r\n      width: 4\r\n    }\r\n  }\r\n\r\n\r\n]}\r\n  xLabel=\"foo\"\r\n  yLabel=\"bar\"\r\n/>\r\n\r\n\r\n\r\nfunction randomData(size: number) {\r\n  const data: number[] = [];\r\n  for (let i = 0; i < size; i++) {\r\n    data.push(Math.random());\r\n  }\r\n  return data;\r\n}\r\n",__ADDS_MAP__={"lineplot--basic":{startLoc:{col:21,line:10},endLoc:{col:2,line:24},startBody:{col:21,line:10},endBody:{col:2,line:24}},"lineplot--basic-filled":{startLoc:{col:27,line:27},endLoc:{col:2,line:41},startBody:{col:27,line:27},endBody:{col:2,line:41}},"lineplot--multi-variate":{startLoc:{col:28,line:46},endLoc:{col:2,line:83},startBody:{col:28,line:46},endBody:{col:2,line:83}},"lineplot--multi-variate-filled":{startLoc:{col:34,line:86},endLoc:{col:2,line:123},startBody:{col:34,line:86},endBody:{col:2,line:123}}},__MODULE_DEPENDENCIES__=[],__LOCAL_DEPENDENCIES__={},__IDS_TO_FRAMEWORKS__={},Basic=(__webpack_exports__.default={parameters:{storySource:{source:"import React from 'react';\r\nimport { action } from '@storybook/addon-actions';\r\nimport LinePlot from './LinePlot';\r\n\r\nexport default {\r\n  title: 'LinePlot',\r\n  component: LinePlot,\r\n};\r\n\r\nexport const Basic = () => <LinePlot\r\n  onPlotUpdate={action('state updated')}\r\n  data={[{\r\n    x: ['A','B','C','D','E'],\r\n    y: [2,4,3,5,8],\r\n    fill: 'none',\r\n    name: 'Variable A',\r\n    line: {\r\n      dash: 'solid',\r\n      width: 3\r\n      }\r\n  }]}\r\n  xLabel=\"foo\"\r\n  yLabel=\"bar\"\r\n/>\r\n\r\n\r\nexport const BasicFilled = () => <LinePlot\r\n  onPlotUpdate={action('state updated')}\r\n  data={[{\r\n    x: [1,2,4,8,16,32,64,128],\r\n    y: [22,54,90,12,94,38,25,82],\r\n    name: 'Variable A',\r\n    fill: 'tozeroy',\r\n    line: {\r\n      dash: 'solid',\r\n      width: 3\r\n      }\r\n  }]}\r\n  xLabel=\"foo\"\r\n  yLabel=\"bar\"\r\n/>\r\n\r\n\r\n\r\nconst x = ['A','B','C','D','E'];\r\nexport const MultiVariate = () => <LinePlot\r\n  onPlotUpdate={action('state updated')}\r\n  data={[{\r\n    x,\r\n    y: [1,2,3,4,5],\r\n    name: 'Variable A',\r\n    fill: 'none',\r\n      line: {\r\n      dash: 'dashdot',\r\n      width: 4\r\n    }\r\n  }, \r\n  {\r\n    x,\r\n    y: [1,4,9,16,25],\r\n    fill: 'none',\r\n    name: 'Variable B',\r\n    line: {\r\n      dash: 'dot',\r\n      width: 4\r\n    }\r\n  }, \r\n  {\r\n    x,\r\n    y: [3,9,4,16,10],\r\n    fill: 'none',\r\n    name: 'Variable C',\r\n    line: {\r\n      dash: 'solid',\r\n      width: 4\r\n    }\r\n  }\r\n\r\n\r\n]}\r\n  xLabel=\"foo\"\r\n  yLabel=\"bar\"\r\n/>\r\n\r\n\r\nexport const MultiVariateFilled = () => <LinePlot\r\n  onPlotUpdate={action('state updated')}\r\n  data={[{\r\n    x:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],\r\n    y: [90,92,95,95,96,97,97,98,98,97,94,94,92,90,84,78,52,29,17,10,5,3,2,2,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,8,16,22,28,38,50,66,70,67],\r\n    name: 'E',\r\n    fill: 'tozeroy',\r\n    line: {\r\n      dash: 'dashdot',\r\n      width: 4\r\n    }\r\n  }, \r\n  {\r\n    x:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],\r\n    y: [10,8,5,5,4,4,3,3,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,16,19,46,63,71,88,97,100,100,100,95,95,95,92,84,78,72,62,50,44,30,33],\r\n    name: 'S',\r\n    fill: 'tozeroy',\r\n    line: {\r\n      dash: 'solid',\r\n      width: 4\r\n    }\r\n  },\r\n  {\r\n    x:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],\r\n    y: [0,0,0,0,0,0,0,0,0,2,5,6,8,10,16,22,48,71,83,90,95,97,98,98,100,93,84,81,54,37,29,12,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    name: 'T',\r\n    fill: 'tozeroy',\r\n    line: {\r\n      dash: 'solid',\r\n      width: 4\r\n    }\r\n  }\r\n\r\n\r\n]}\r\n  xLabel=\"foo\"\r\n  yLabel=\"bar\"\r\n/>\r\n\r\n\r\n\r\nfunction randomData(size: number) {\r\n  const data: number[] = [];\r\n  for (let i = 0; i < size; i++) {\r\n    data.push(Math.random());\r\n  }\r\n  return data;\r\n}\r\n",locationsMap:{"lineplot--basic":{startLoc:{col:21,line:10},endLoc:{col:2,line:24},startBody:{col:21,line:10},endBody:{col:2,line:24}},"lineplot--basic-filled":{startLoc:{col:27,line:27},endLoc:{col:2,line:41},startBody:{col:27,line:27},endBody:{col:2,line:41}},"lineplot--multi-variate":{startLoc:{col:28,line:46},endLoc:{col:2,line:83},startBody:{col:28,line:46},endBody:{col:2,line:83}},"lineplot--multi-variate-filled":{startLoc:{col:34,line:86},endLoc:{col:2,line:123},startBody:{col:34,line:86},endBody:{col:2,line:123}}}}},title:"LinePlot",component:LinePlot},addSourceDecorator((function(){return react_default.a.createElement(LinePlot,{onPlotUpdate:Object(dist.action)("state updated"),data:[{x:["A","B","C","D","E"],y:[2,4,3,5,8],fill:"none",name:"Variable A",line:{dash:"solid",width:3}}],xLabel:"foo",yLabel:"bar"})}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/LinePlot.stories.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__})),BasicFilled=addSourceDecorator((function(){return react_default.a.createElement(LinePlot,{onPlotUpdate:Object(dist.action)("state updated"),data:[{x:[1,2,4,8,16,32,64,128],y:[22,54,90,12,94,38,25,82],name:"Variable A",fill:"tozeroy",line:{dash:"solid",width:3}}],xLabel:"foo",yLabel:"bar"})}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/LinePlot.stories.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),x=["A","B","C","D","E"],MultiVariate=addSourceDecorator((function(){return react_default.a.createElement(LinePlot,{onPlotUpdate:Object(dist.action)("state updated"),data:[{x:x,y:[1,2,3,4,5],name:"Variable A",fill:"none",line:{dash:"dashdot",width:4}},{x:x,y:[1,4,9,16,25],fill:"none",name:"Variable B",line:{dash:"dot",width:4}},{x:x,y:[3,9,4,16,10],fill:"none",name:"Variable C",line:{dash:"solid",width:4}}],xLabel:"foo",yLabel:"bar"})}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/LinePlot.stories.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),MultiVariateFilled=addSourceDecorator((function(){return react_default.a.createElement(LinePlot,{onPlotUpdate:Object(dist.action)("state updated"),data:[{x:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],y:[90,92,95,95,96,97,97,98,98,97,94,94,92,90,84,78,52,29,17,10,5,3,2,2,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,8,16,22,28,38,50,66,70,67],name:"E",fill:"tozeroy",line:{dash:"dashdot",width:4}},{x:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],y:[10,8,5,5,4,4,3,3,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,16,19,46,63,71,88,97,100,100,100,95,95,95,92,84,78,72,62,50,44,30,33],name:"S",fill:"tozeroy",line:{dash:"solid",width:4}},{x:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],y:[0,0,0,0,0,0,0,0,0,2,5,6,8,10,16,22,48,71,83,90,95,97,98,98,100,93,84,81,54,37,29,12,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],name:"T",fill:"tozeroy",line:{dash:"solid",width:4}}],xLabel:"foo",yLabel:"bar"})}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/LinePlot.stories.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__})},1302:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Basic",(function(){return Basic}));var react=__webpack_require__(0),react_default=__webpack_require__.n(react),dist=__webpack_require__(40),PlotlyPlot=(__webpack_require__(3),__webpack_require__(66));function _extends(){return(_extends=Object.assign||function(target){for(var source,i=1;i<arguments.length;i++)for(var key in source=arguments[i])Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key]);return target}).apply(this,arguments)}function Pie(props){return react_default.a.createElement(PlotlyPlot.a,_extends({},props,{type:"pie"}))}Pie.displayName="Pie",Pie.__docgenInfo={description:"",methods:[],displayName:"Pie"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/plots/Pie.tsx"]={name:"Pie",docgenInfo:Pie.__docgenInfo,path:"src/plots/Pie.tsx"});__webpack_require__(65).withSource;var addSourceDecorator=__webpack_require__(65).addSource,Basic=(__webpack_exports__.default={parameters:{storySource:{source:"import React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport Pie from './Pie';\n\nexport default {\n  title: 'Pie',\n  component: Pie,\n};\n\nexport const Basic = () => <Pie\n  onPlotUpdate={action('state updated')}\n  data={[{\n    labels: [ 'Foo', 'Bar', 'Baz' ],\n    values: [ 10, 2, 30 ]\n  }]}\n/>\n",locationsMap:{"pie--basic":{startLoc:{col:21,line:10},endLoc:{col:2,line:16},startBody:{col:21,line:10},endBody:{col:2,line:16}}}}},title:"Pie",component:Pie},addSourceDecorator((function(){return react_default.a.createElement(Pie,{onPlotUpdate:Object(dist.action)("state updated"),data:[{labels:["Foo","Bar","Baz"],values:[10,2,30]}]})}),{__STORY__:"import React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport Pie from './Pie';\n\nexport default {\n  title: 'Pie',\n  component: Pie,\n};\n\nexport const Basic = () => <Pie\n  onPlotUpdate={action('state updated')}\n  data={[{\n    labels: [ 'Foo', 'Bar', 'Baz' ],\n    values: [ 10, 2, 30 ]\n  }]}\n/>\n",__ADDS_MAP__:{"pie--basic":{startLoc:{col:21,line:10},endLoc:{col:2,line:16},startBody:{col:21,line:10},endBody:{col:2,line:16}}},__MAIN_FILE_LOCATION__:"/Pie.stories.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/runner/work/plot-components/plot-components/src/plots",__IDS_TO_FRAMEWORKS__:{}}))},1303:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Basic",(function(){return Basic})),__webpack_require__.d(__webpack_exports__,"BasicFilled",(function(){return BasicFilled}));var react=__webpack_require__(0),react_default=__webpack_require__.n(react),dist=__webpack_require__(40),PlotlyPlot=(__webpack_require__(1),__webpack_require__(9),__webpack_require__(3),__webpack_require__(4),__webpack_require__(66));function _extends(){return(_extends=Object.assign||function(target){for(var source,i=1;i<arguments.length;i++)for(var key in source=arguments[i])Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key]);return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],0<=excluded.indexOf(key)||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],0<=excluded.indexOf(key)||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function ScatterAndLinePlot(props){var xLabel=props.xLabel,yLabel=props.yLabel,plotTitle=props.plotTitle,plotlyProps=_objectWithoutProperties(props,["xLabel","yLabel","plotTitle"]);return react_default.a.createElement(PlotlyPlot.a,_extends({},plotlyProps,{layout:{xaxis:{title:xLabel},yaxis:{title:yLabel},title:{text:plotTitle}},type:"scatter"}))}ScatterAndLinePlot.displayName="ScatterAndLinePlot",ScatterAndLinePlot.__docgenInfo={description:"",methods:[],displayName:"ScatterAndLinePlot",props:{xLabel:{required:!0,tsType:{name:"string"},description:""},yLabel:{required:!0,tsType:{name:"string"},description:""},plotTitle:{required:!0,tsType:{name:"string"},description:""}},composes:["PlotComponentProps"]},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/plots/ScatterAndLinePlot.tsx"]={name:"ScatterAndLinePlot",docgenInfo:ScatterAndLinePlot.__docgenInfo,path:"src/plots/ScatterAndLinePlot.tsx"});__webpack_require__(65).withSource;var addSourceDecorator=__webpack_require__(65).addSource,__SOURCE_PREFIX__="/home/runner/work/plot-components/plot-components/src/plots",__STORY__="import React from 'react';\r\nimport { action } from '@storybook/addon-actions';\r\nimport ScatterAndLinePlot from './ScatterAndLinePlot';\r\n\r\nexport default {\r\n  title: 'ScatterAndLinePlot',\r\n  component: ScatterAndLinePlot,\r\n};\r\n\r\n\r\nexport const Basic = () => <ScatterAndLinePlot\r\n  onPlotUpdate={action('state updated')}\r\n  data={[{\r\n    x: ['bf-ld','bf-hd'],\r\n    y: [-1.06, -0.65],\r\n    name: 'Variable A',\r\n    mode: 'markers',\r\n    fill: 'none',\r\n  }, {\r\n    x: ['0.5hr','1hr','12hr','24hr','48hr','72hr'],\r\n    y: [-1.09,-0.33,-0.52,-0.24,-0.36,-0.08],\r\n    name: 'Variable B',\r\n    mode: 'lines+markers',\r\n    fill: 'none'\r\n  }]}\r\n  xLabel=\"foo\"\r\n  yLabel=\"bar\"\r\n  plotTitle=\"TriTrypDB: exprn_val - Tb927.11.3120\"\r\n/>\r\n\r\n\r\n\r\n\r\nexport const BasicFilled = () => <ScatterAndLinePlot\r\nonPlotUpdate={action('state updated')}\r\ndata={[{\r\n  x: ['bf-ld','bf-hd'],\r\n  y: [-1.06, -0.65],\r\n  name: 'Variable A',\r\n  mode: 'markers',\r\n  fill: 'none'\r\n}, {\r\n  x: ['0.5hr','1hr','12hr','24hr','48hr','72hr'],\r\n  y: [-1.09,-0.33,-0.52,-0.24,-0.36,-0.08],\r\n  name: 'Variable B',\r\n  mode: 'lines+markers',\r\n  fill: 'tozeroy'\r\n}]}\r\nxLabel=\"foo\"\r\nyLabel=\"bar\"\r\nplotTitle=\"TriTrypDB: exprn_val - Tb927.11.3120\"\r\n/>",__ADDS_MAP__={"scatterandlineplot--basic":{startLoc:{col:21,line:11},endLoc:{col:2,line:29},startBody:{col:21,line:11},endBody:{col:2,line:29}},"scatterandlineplot--basic-filled":{startLoc:{col:27,line:34},endLoc:{col:2,line:52},startBody:{col:27,line:34},endBody:{col:2,line:52}}},__MODULE_DEPENDENCIES__=[],__LOCAL_DEPENDENCIES__={},__IDS_TO_FRAMEWORKS__={},Basic=(__webpack_exports__.default={parameters:{storySource:{source:"import React from 'react';\r\nimport { action } from '@storybook/addon-actions';\r\nimport ScatterAndLinePlot from './ScatterAndLinePlot';\r\n\r\nexport default {\r\n  title: 'ScatterAndLinePlot',\r\n  component: ScatterAndLinePlot,\r\n};\r\n\r\n\r\nexport const Basic = () => <ScatterAndLinePlot\r\n  onPlotUpdate={action('state updated')}\r\n  data={[{\r\n    x: ['bf-ld','bf-hd'],\r\n    y: [-1.06, -0.65],\r\n    name: 'Variable A',\r\n    mode: 'markers',\r\n    fill: 'none',\r\n  }, {\r\n    x: ['0.5hr','1hr','12hr','24hr','48hr','72hr'],\r\n    y: [-1.09,-0.33,-0.52,-0.24,-0.36,-0.08],\r\n    name: 'Variable B',\r\n    mode: 'lines+markers',\r\n    fill: 'none'\r\n  }]}\r\n  xLabel=\"foo\"\r\n  yLabel=\"bar\"\r\n  plotTitle=\"TriTrypDB: exprn_val - Tb927.11.3120\"\r\n/>\r\n\r\n\r\n\r\n\r\nexport const BasicFilled = () => <ScatterAndLinePlot\r\nonPlotUpdate={action('state updated')}\r\ndata={[{\r\n  x: ['bf-ld','bf-hd'],\r\n  y: [-1.06, -0.65],\r\n  name: 'Variable A',\r\n  mode: 'markers',\r\n  fill: 'none'\r\n}, {\r\n  x: ['0.5hr','1hr','12hr','24hr','48hr','72hr'],\r\n  y: [-1.09,-0.33,-0.52,-0.24,-0.36,-0.08],\r\n  name: 'Variable B',\r\n  mode: 'lines+markers',\r\n  fill: 'tozeroy'\r\n}]}\r\nxLabel=\"foo\"\r\nyLabel=\"bar\"\r\nplotTitle=\"TriTrypDB: exprn_val - Tb927.11.3120\"\r\n/>",locationsMap:{"scatterandlineplot--basic":{startLoc:{col:21,line:11},endLoc:{col:2,line:29},startBody:{col:21,line:11},endBody:{col:2,line:29}},"scatterandlineplot--basic-filled":{startLoc:{col:27,line:34},endLoc:{col:2,line:52},startBody:{col:27,line:34},endBody:{col:2,line:52}}}}},title:"ScatterAndLinePlot",component:ScatterAndLinePlot},addSourceDecorator((function(){return react_default.a.createElement(ScatterAndLinePlot,{onPlotUpdate:Object(dist.action)("state updated"),data:[{x:["bf-ld","bf-hd"],y:[-1.06,-.65],name:"Variable A",mode:"markers",fill:"none"},{x:["0.5hr","1hr","12hr","24hr","48hr","72hr"],y:[-1.09,-.33,-.52,-.24,-.36,-.08],name:"Variable B",mode:"lines+markers",fill:"none"}],xLabel:"foo",yLabel:"bar",plotTitle:"TriTrypDB: exprn_val - Tb927.11.3120"})}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/ScatterAndLinePlot.stories.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__})),BasicFilled=addSourceDecorator((function(){return react_default.a.createElement(ScatterAndLinePlot,{onPlotUpdate:Object(dist.action)("state updated"),data:[{x:["bf-ld","bf-hd"],y:[-1.06,-.65],name:"Variable A",mode:"markers",fill:"none"},{x:["0.5hr","1hr","12hr","24hr","48hr","72hr"],y:[-1.09,-.33,-.52,-.24,-.36,-.08],name:"Variable B",mode:"lines+markers",fill:"tozeroy"}],xLabel:"foo",yLabel:"bar",plotTitle:"TriTrypDB: exprn_val - Tb927.11.3120"})}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/ScatterAndLinePlot.stories.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__})},1304:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Basic",(function(){return Basic})),__webpack_require__.d(__webpack_exports__,"MultiVariate",(function(){return MultiVariate}));var react=__webpack_require__(0),react_default=__webpack_require__.n(react),dist=__webpack_require__(40),PlotlyPlot=(__webpack_require__(1),__webpack_require__(9),__webpack_require__(3),__webpack_require__(4),__webpack_require__(66));function _extends(){return(_extends=Object.assign||function(target){for(var source,i=1;i<arguments.length;i++)for(var key in source=arguments[i])Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key]);return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],0<=excluded.indexOf(key)||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],0<=excluded.indexOf(key)||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function ScatterPlot(props){var xLabel=props.xLabel,yLabel=props.yLabel,plotlyProps=_objectWithoutProperties(props,["xLabel","yLabel"]);return react_default.a.createElement(PlotlyPlot.a,_extends({},plotlyProps,{layout:{xaxis:{title:xLabel},yaxis:{title:yLabel}},type:"scatter",mode:"markers"}))}ScatterPlot.displayName="ScatterPlot",ScatterPlot.__docgenInfo={description:"",methods:[],displayName:"ScatterPlot",props:{xLabel:{required:!0,tsType:{name:"string"},description:"Label for x-axis"},yLabel:{required:!0,tsType:{name:"string"},description:"Label for y-axis"}},composes:["PlotComponentProps"]},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/plots/ScatterPlot.tsx"]={name:"ScatterPlot",docgenInfo:ScatterPlot.__docgenInfo,path:"src/plots/ScatterPlot.tsx"});__webpack_require__(65).withSource;var addSourceDecorator=__webpack_require__(65).addSource,__SOURCE_PREFIX__="/home/runner/work/plot-components/plot-components/src/plots",__STORY__="import React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport ScatterPlot from './ScatterPlot';\n\nexport default {\n  title: 'ScatterPlot',\n  component: ScatterPlot,\n};\n\nexport const Basic = () => <ScatterPlot\n  onPlotUpdate={action('state updated')}\n  data={[{\n    x: [1, 2, 5, 6, 10, 12, 14, 18, 20, 22, 24, 26, 29, 30, 35],\n    y: [3, 5, 1, 8, 6,  2,  20, 5,  10, 12, 14, 16, 20, 25, 27],\n    name: 'Variable A',\n  }]}\n  xLabel=\"Height\"\n  yLabel=\"Diameter\"\n/>\n\nexport const MultiVariate = () => <ScatterPlot\n  onPlotUpdate={action('state updated')}\n  data={[{\n    x: [1, 2, 5, 6, 10, 12, 14, 18, 20, 22, 24, 26, 29, 30, 35],\n    y: [3, 5, 1, 8, 6,  2,  20, 5,  10, 12, 14, 16, 20, 25, 27],\n    name: 'Variable A',\n  }, {\n    x: [1, 2, 5, 6, 10, 12, 14, 18, 20, 22, 24, 26, 29, 30, 35],\n    y: [5, 7, 3, 5, 12,  6, 17, 12, 7,  16, 19, 25, 28, 32, 33],\n    name: 'Variable B',\n  }]}\n  xLabel=\"Height\"\n  yLabel=\"Diameter\"\n/>\n\nfunction randomData(size: number) {\n  const data: number[] = [];\n  for (let i = 0; i < size; i++) {\n    data.push(Math.random());\n  }\n  return data;\n}\n",__ADDS_MAP__={"scatterplot--basic":{startLoc:{col:21,line:10},endLoc:{col:2,line:19},startBody:{col:21,line:10},endBody:{col:2,line:19}},"scatterplot--multi-variate":{startLoc:{col:28,line:21},endLoc:{col:2,line:34},startBody:{col:28,line:21},endBody:{col:2,line:34}}},__MODULE_DEPENDENCIES__=[],__LOCAL_DEPENDENCIES__={},__IDS_TO_FRAMEWORKS__={},Basic=(__webpack_exports__.default={parameters:{storySource:{source:"import React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport ScatterPlot from './ScatterPlot';\n\nexport default {\n  title: 'ScatterPlot',\n  component: ScatterPlot,\n};\n\nexport const Basic = () => <ScatterPlot\n  onPlotUpdate={action('state updated')}\n  data={[{\n    x: [1, 2, 5, 6, 10, 12, 14, 18, 20, 22, 24, 26, 29, 30, 35],\n    y: [3, 5, 1, 8, 6,  2,  20, 5,  10, 12, 14, 16, 20, 25, 27],\n    name: 'Variable A',\n  }]}\n  xLabel=\"Height\"\n  yLabel=\"Diameter\"\n/>\n\nexport const MultiVariate = () => <ScatterPlot\n  onPlotUpdate={action('state updated')}\n  data={[{\n    x: [1, 2, 5, 6, 10, 12, 14, 18, 20, 22, 24, 26, 29, 30, 35],\n    y: [3, 5, 1, 8, 6,  2,  20, 5,  10, 12, 14, 16, 20, 25, 27],\n    name: 'Variable A',\n  }, {\n    x: [1, 2, 5, 6, 10, 12, 14, 18, 20, 22, 24, 26, 29, 30, 35],\n    y: [5, 7, 3, 5, 12,  6, 17, 12, 7,  16, 19, 25, 28, 32, 33],\n    name: 'Variable B',\n  }]}\n  xLabel=\"Height\"\n  yLabel=\"Diameter\"\n/>\n\nfunction randomData(size: number) {\n  const data: number[] = [];\n  for (let i = 0; i < size; i++) {\n    data.push(Math.random());\n  }\n  return data;\n}\n",locationsMap:{"scatterplot--basic":{startLoc:{col:21,line:10},endLoc:{col:2,line:19},startBody:{col:21,line:10},endBody:{col:2,line:19}},"scatterplot--multi-variate":{startLoc:{col:28,line:21},endLoc:{col:2,line:34},startBody:{col:28,line:21},endBody:{col:2,line:34}}}}},title:"ScatterPlot",component:ScatterPlot},addSourceDecorator((function(){return react_default.a.createElement(ScatterPlot,{onPlotUpdate:Object(dist.action)("state updated"),data:[{x:[1,2,5,6,10,12,14,18,20,22,24,26,29,30,35],y:[3,5,1,8,6,2,20,5,10,12,14,16,20,25,27],name:"Variable A"}],xLabel:"Height",yLabel:"Diameter"})}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/ScatterPlot.stories.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__})),MultiVariate=addSourceDecorator((function(){return react_default.a.createElement(ScatterPlot,{onPlotUpdate:Object(dist.action)("state updated"),data:[{x:[1,2,5,6,10,12,14,18,20,22,24,26,29,30,35],y:[3,5,1,8,6,2,20,5,10,12,14,16,20,25,27],name:"Variable A"},{x:[1,2,5,6,10,12,14,18,20,22,24,26,29,30,35],y:[5,7,3,5,12,6,17,12,7,16,19,25,28,32,33],name:"Variable B"}],xLabel:"Height",yLabel:"Diameter"})}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/ScatterPlot.stories.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__})},453:function(module,exports,__webpack_require__){__webpack_require__(454),__webpack_require__(600),__webpack_require__(601),__webpack_require__(1254),module.exports=__webpack_require__(1255)},518:function(module,exports){},66:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return PlotlyPlot}));__webpack_require__(1),__webpack_require__(11),__webpack_require__(22),__webpack_require__(46),__webpack_require__(35),__webpack_require__(62),__webpack_require__(13),__webpack_require__(10),__webpack_require__(42),__webpack_require__(19),__webpack_require__(1295),__webpack_require__(1296),__webpack_require__(4),__webpack_require__(12),__webpack_require__(129),__webpack_require__(32),__webpack_require__(16),__webpack_require__(39),__webpack_require__(18);var react__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_19___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_19__);function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null!=arguments[i]?arguments[i]:{},i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}));return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var config={responsive:!0},Plot=Object(react__WEBPACK_IMPORTED_MODULE_19__.lazy)((function(){return __webpack_require__.e(3).then(__webpack_require__.t.bind(null,1306,7))}));function PlotlyPlot(props){var mode=props.mode,type=props.type,data=props.data,style=props.style,_props$layout=props.layout,layout=void 0===_props$layout?{}:_props$layout,_props$frames=props.frames,frames=void 0===_props$frames?null:_props$frames,onPlotUpdate=props.onPlotUpdate,_useState2=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_19__.useState)({data:data.map((function(trace){return _objectSpread({type:type,mode:mode},trace)})),layout:layout,frames:frames}),2),state=_useState2[0],updateState=_useState2[1],finalStyle=_objectSpread({height:"100%",width:"100%"},style),handleUpdate=Object(react__WEBPACK_IMPORTED_MODULE_19__.useCallback)((function(figure){updateState(figure),onPlotUpdate&&onPlotUpdate(figure)}),[updateState,onPlotUpdate]);return react__WEBPACK_IMPORTED_MODULE_19___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_19__.Suspense,{fallback:"Loading..."},react__WEBPACK_IMPORTED_MODULE_19___default.a.createElement(Plot,{style:finalStyle,data:state.data,layout:state.layout,frames:state.frames||void 0,onInitialized:handleUpdate,onUpdate:handleUpdate,config:config}))}PlotlyPlot.displayName="PlotlyPlot",PlotlyPlot.__docgenInfo={description:"Wrapper over the `react-plotly.js` `Plot` component\n\n@param props",methods:[],displayName:"PlotlyPlot",props:{type:{required:!0,tsType:{name:"PlotType"},description:"The type of Plotly plot"},mode:{required:!1,tsType:{name:"PlotData['mode']",raw:"PlotData['mode']"},description:"The mode of Plotly plot"},layout:{required:!1,tsType:{name:"Partial",elements:[{name:"Layout"}],raw:"Partial<Layout>"},description:"Plotly layout options"},frames:{required:!1,tsType:{name:"Array",elements:[{name:"Frame"}],raw:"Frame[]"},description:"Plotly frames"}},composes:["PlotComponentProps"]},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/plots/PlotlyPlot.tsx"]={name:"PlotlyPlot",docgenInfo:PlotlyPlot.__docgenInfo,path:"src/plots/PlotlyPlot.tsx"})}},[[453,1,2]]]);
//# sourceMappingURL=main.b4398f95a663b9fd0e0f.bundle.js.map